---
title: "Lab 3"
author: "Kai, Eva, Chloe"
format: 
  html: 
    self-contained: true
    code-tools: true
    code-fold: true
editor: visual
execute: 
  echo: true
  include: true
  message: false
  warning: false
---

```{r}
# libraries
library(here)
library(tidyverse)
library(httr)
library(jsonlite)
library(leaflet)
```

**Create one Quarto file for all of Lab 4.**

Make sure your final file is carefully formatted, so that each analysis is clear and concise. Be sure your knitted .html file shows all your source code, including your function definitions.

## The Open-Notify API

One of the Open-Notify APIs provides predictions of pass times for a given location when given the corresponding latitude, longitude, and altitude are given:

[Pass Times API](https://g7vrd.co.uk/public-satellite-pass-rest-api)

### Pass Times for U.S. State Captials

You can find the latitudes and longitudes for the U.S. state capitals at [this site](https://people.sc.fsu.edu/~jburkardt/datasets/states/states.html).

1.  Use the API to get the next 3 predicted pass times for all of the U.S. state capitals. Organize all of this information into a nice data frame (or data frame-like object) that will be easy to use for mapping.


```{r}
# Loading in capital dataset

capital <- read.table("https://people.sc.fsu.edu/~jburkardt/datasets/states/state_capitals_ll.txt")
capital <- capital |>
  rename(State = V1,
         Latitude = V2,
         Longitude = V3)
```

```{r}
# Function to get pass times for a given location
pass_times <- function(latitude, longitude) {
  url <- paste0("https://api.g7vrd.co.uk/v1/satellite-passes/25544/",
                latitude, "/", longitude, ".json")
  pass <- GET(url)
  data <- fromJSON(rawToChar(pass$content))
  if (length(data$pass) == 0) {
     return(NULL)
   }
  dataframe <- data |>
    data.frame(data) |>
    slice_head(n = 3)
  dataframe

}
```

```{r}
# Source for bind_rows(): https://dplyr.tidyverse.org/reference/bind_rows.html
map_passes <- map2(capital$Latitude, capital$Longitude, pass_times) |>
  bind_rows()
```


### Mapping the Data

1.  Map the U.S. state capitals using `leaflet`

```{r}
# Map with U.S. capitals
leaflet() |>
  addProviderTiles(providers$Stadia.StamenTerrain) |>
  addCircleMarkers(data = map_passes,
                   lat = ~lat,
                   lng = ~lon,
                   radius = 4,
                   color = "darkgreen") |>
  setView(lng = -100, lat = 40, zoom = 4)
```

2.  Find an image of your choosing to use as the marker icon, that's relevant for these data.

```{r}
leaflet() |>
  addProviderTiles(providers$Stadia.StamenTerrain) |>
  addCircleMarkers(data = map_passes,
                   lat = ~lat,
                   lng = ~lon,
                   radius = 4,
                   color = "darkgreen") |>
  setView(lng = -100, lat = 40, zoom = 4)


#Set color palette
#qpal <- colorQuantile("Blues", countries_clean2$nat_results, n = 7) 

# map1 <- map_passes |>
#   leaflet() |>
#   #Adding map with no labels
#   addProviderTiles(
#     provider = "Esri.NatGeoWorldMap" 
#   ) |>
#   #Setting the default view screen
#   setView(lng = 0, lat = 48, zoom = 1) |>
#   #Specifies country border colors and thickness and adding color palette
#   addPolygons(smoothFactor = 0.2, 
#               opacity = 1,
#               color = "slategray",
#               weight = 1,
#               fillOpacity = 1)
#               #Adding labels for when you hover over a country
#               #label = ~paste(name, ": ", round(nat_results * 100, 2), "%", sep = ""),
#               
#   #Add plot title and specify font color, size, and position
#   addControl(
#     html = "<div style='
#       text-align: center;
#       background-color: white;
#       padding: 5px;
#       font-weight: bold;
#       font-size: 20px;
#       color: black;
#     '>ISS Pass Times Over U.S. State Capitals</div>",
#     position = "topright"
#   )
```


3.  The hover-over information for each marker should include the name of the state capital and the soonest predicted pass time. The click information should include the name of the state capital and all three predicted pass times. Make sure these times are in an easy-to-read format.

### Drawing the Route of the ISS

Check out this video for [adding polylines](https://www.youtube.com/watch?v=iKESL0Iwmmw) to a `leaflet` map.

1.  Overlay lines on your map that connect the U.S. state capitals in order of pass times (essentially east to west) so that we can see the expected pass order.
